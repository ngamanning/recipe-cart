// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace RecipeAPI.Data.Entities;

public partial class RecipeCartContext : DbContext
{
    public RecipeCartContext(DbContextOptions<RecipeCartContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Categories> Categories { get; set; }

    public virtual DbSet<Ingredients> Ingredients { get; set; }

    public virtual DbSet<MealPlanItems> MealPlanItems { get; set; }

    public virtual DbSet<MealPlans> MealPlans { get; set; }

    public virtual DbSet<RecipeIngredients> RecipeIngredients { get; set; }

    public virtual DbSet<Recipes> Recipes { get; set; }

    public virtual DbSet<Units> Units { get; set; }

    public virtual DbSet<Users> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Categories>(entity =>
        {
            entity.HasKey(e => e.CategoryId).HasName("PK__Categori__19093A0BC245340C");

            entity.HasIndex(e => e.Name, "UQ__Categori__737584F605AEA7D9").IsUnique();

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Ingredients>(entity =>
        {
            entity.HasKey(e => e.IngredientId).HasName("PK__Ingredie__BEAEB25A4A34096B");

            entity.HasIndex(e => e.Name, "UQ__Ingredie__737584F6CB24AFCB").IsUnique();

            entity.Property(e => e.Category).HasMaxLength(50);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.NameNormalized)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<MealPlanItems>(entity =>
        {
            entity.HasKey(e => e.MealPlanItemId).HasName("PK__MealPlan__F7846F55AD99A785");

            entity.Property(e => e.MealType)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.PlannedDate).HasColumnType("date");
            entity.Property(e => e.Servings).HasDefaultValue(1);

            entity.HasOne(d => d.MealPlan).WithMany(p => p.MealPlanItems)
                .HasForeignKey(d => d.MealPlanId)
                .HasConstraintName("FK_MealPlanItems_MealPlan");

            entity.HasOne(d => d.Recipe).WithMany(p => p.MealPlanItems)
                .HasForeignKey(d => d.RecipeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_MealPlanItems_Recipe");
        });

        modelBuilder.Entity<MealPlans>(entity =>
        {
            entity.HasKey(e => e.MealPlanId).HasName("PK__MealPlan__0620DB761DF42582");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getutcdate())");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.UpdatedAt).HasDefaultValueSql("(getutcdate())");

            entity.HasOne(d => d.User).WithMany(p => p.MealPlans)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_MealPlan_User");
        });

        modelBuilder.Entity<RecipeIngredients>(entity =>
        {
            entity.HasKey(e => new { e.RecipeId, e.IngredientId }).HasName("PK__RecipeIn__46336395CA53C24C");

            entity.Property(e => e.Notes).HasMaxLength(100);
            entity.Property(e => e.Quantity).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Ingredient).WithMany(p => p.RecipeIngredients)
                .HasForeignKey(d => d.IngredientId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RecipeIngredients_Ingredients");

            entity.HasOne(d => d.Recipe).WithMany(p => p.RecipeIngredients)
                .HasForeignKey(d => d.RecipeId)
                .HasConstraintName("FK_RecipeIngredients_Recipes");

            entity.HasOne(d => d.Unit).WithMany(p => p.RecipeIngredients)
                .HasForeignKey(d => d.UnitId)
                .HasConstraintName("FK_RecipeIngredients_Units");
        });

        modelBuilder.Entity<Recipes>(entity =>
        {
            entity.HasKey(e => e.RecipeId).HasName("PK__Recipes__FDD988B08162DEB1");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getutcdate())");
            entity.Property(e => e.Description).HasMaxLength(500);
            entity.Property(e => e.ImageUrl).HasMaxLength(255);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.UpdatedAt).HasDefaultValueSql("(getutcdate())");

            entity.HasOne(d => d.User).WithMany(p => p.Recipes)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK_Recipes_User");

            entity.HasMany(d => d.Category).WithMany(p => p.Recipe)
                .UsingEntity<Dictionary<string, object>>(
                    "RecipeCategories",
                    r => r.HasOne<Categories>().WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__RecipeCat__Categ__73BA3083"),
                    l => l.HasOne<Recipes>().WithMany()
                        .HasForeignKey("RecipeId")
                        .HasConstraintName("FK_RecipeCategories_Recipe"),
                    j =>
                    {
                        j.HasKey("RecipeId", "CategoryId").HasName("PK__RecipeCa__5C491B102FE1D663");
                    });
        });

        modelBuilder.Entity<Units>(entity =>
        {
            entity.HasKey(e => e.UnitId).HasName("PK__Units__44F5ECB583189FF8");

            entity.HasIndex(e => e.Name, "UQ__Units__737584F62D8E9A8A").IsUnique();

            entity.Property(e => e.Abbreviation).HasMaxLength(10);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.UnitType)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<Users>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Users__1788CC4CBCDF9BE4");

            entity.HasIndex(e => e.Username, "UQ__Users__536C85E476ABDF5B").IsUnique();

            entity.HasIndex(e => e.Email, "UQ__Users__A9D1053461B98290").IsUnique();

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getutcdate())");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.PasswordHash).IsRequired();
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}